;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; Tictactoe chords;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; Components;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;    (role white)    (role black)    (<= (base (cell ?i ?j ?b white)) (index ?i) (index ?j) (board ?b))    (<= (base (cell ?i ?j ?b black)) (index ?i) (index ?j) (board ?b))    (<= (base (cell ?i ?j ?b blank)) (index ?i) (index ?j) (board ?b))    (base (control white))    (base (control black))    (<= (input ?r set((mark ?i ?j 1) ?y)))        (role ?r) &&        (index ?i) &&        (index ?j) &&        (inputSubset 2 ?y))    (<= (inputSubset ?b (set (mark ?i ?j ?b) ?y))        (succ ?b ?bb) &&        (index ?i) &&        (index ?j) &&        (inputSubset ?bb ?y)    (<= (inputSubset 2 (set (mark ?i ?j bb) nil))        (index ?i) &&        (index ?j))    (<= (input ?r noop) (role ?r))    (<= (feasible ?r (mark ?i ?j))        (role ?r) &&        (index ?i) &&        (index ?j))    (<= (feasible ?r noop) (role ?r))      (index 1)    (index 2)    (index 3)    (board 1)    (board 2)    (succ 1 2)  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; init;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;    (<= (init (cell ?i ?j ?b b))        (index ?i) &&        (index ?j) &&        (board ?b))    (init (control white))    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; possible;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;            (<= (possible ?r (mark ?m ?n ?b))        (true (cell ?m ?n ?b blank))        (true (control ?r)))        (<= (possible white noop)        (true (control black)))        (<= (possible black noop)        (true (control white)));;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; legal;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;            (<= (legal ?r set((mark ?i ?j 1) ?y))        (possible ?r (mark ?i ?j 1)) &&        (legalSubset ?r ?y 2))    (<= (legalSubset ?r (set (mark ?i ?j ?b) ?y) ?b)        (succ ?b ?bb) &&        (role ?r) &&        (possible ?r (mark ?i ?j ?b)) &&        (inputSubset ?r ?y ?bb))    (<= (inputSubset ?r (set (mark ?i ?j bb) nil) 2)        (role ?r) &&        (index ?i) &&        (index ?j))            (<= (possible white noop)        (true (control black)))        (<= (possible black noop)        (true (control white)))    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; next;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;        (<= (next (control white))        (true (control black)))        (<= (next (control black))        (true (control white)))            (<= (row ?i ?b ?r)        (true (cell ?i 1 ?b ?r))        (true (cell ?i 2 ?b ?r))        (true (cell ?i 3 ?b ?r)))        (<= (column ?j ?b ?r)        (true (cell 1 ?j ?b ?r))        (true (cell 2 ?j ?b ?r))        (true (cell 3 ?j ?b ?r)))        (<= (diagonal ?b ?r)        (true (cell 1 1 ?b ?r))        (true (cell 2 2 ?b ?r))        (true (cell 3 3 ?b ?r)))        (<= (diagonal ?b ?r)        (true (cell 1 3 ?b ?r))        (true (cell 2 2 ?b ?r))        (true (cell 3 1 ?b ?r)))            (<= (line ?r) (row ?i ?b ?r))    (<= (line ?r) (column ?j ?b ?r))    (<= (line ?r) (diagonal ?b ?r))            (<= open (true (cell ?i ?j ?b blank)))    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; goal;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;        (<= (goal white 100)        (line x)        (not (line o)))        (<= (goal white 50)        (not (line x))        (not (line o)))        (<= (goal white 0)        (not (line x))        (line o))    (<= (goal black 100)        (not (line x))        (line o))          (<= (goal black 50)        (not (line x))        (not (line o)))      (<= (goal black 0)        (line x)        (not (line o)))    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; terminal;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;        (<= terminal        (line x))        (<= terminal        (line o))        (<= terminal        (not open));;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;